package erpsolims.erpsolimsmodel.erpsolimseo;

import erpsolglob.erpsolglobmodel.erpsolglobclasses.ERPSolGlobalsEntityImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 10 12:24:32 PKT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InReceivedItemShelvesImpl extends ERPSolGlobalsEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Storeid,
        Rnoteno,
        Lineno,
        Shelfid,
        QtyAfterConversion,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        IssuedQty,
        Rnotedetailseq;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int STOREID = AttributesEnum.Storeid.index();
    public static final int RNOTENO = AttributesEnum.Rnoteno.index();
    public static final int LINENO = AttributesEnum.Lineno.index();
    public static final int SHELFID = AttributesEnum.Shelfid.index();
    public static final int QTYAFTERCONVERSION = AttributesEnum.QtyAfterConversion.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int ISSUEDQTY = AttributesEnum.IssuedQty.index();
    public static final int RNOTEDETAILSEQ = AttributesEnum.Rnotedetailseq.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InReceivedItemShelvesImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpsolims.erpsolimsmodel.erpsolimseo.InReceivedItemShelves");
    }

    /**
     * Gets the attribute value for Storeid, using the alias name Storeid.
     * @return the value of Storeid
     */
    public String getStoreid() {
        return (String) getAttributeInternal(STOREID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Storeid.
     * @param value value to set the Storeid
     */
    public void setStoreid(String value) {
        setAttributeInternal(STOREID, value);
    }

    /**
     * Gets the attribute value for Rnoteno, using the alias name Rnoteno.
     * @return the value of Rnoteno
     */
    public String getRnoteno() {
        return (String) getAttributeInternal(RNOTENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Rnoteno.
     * @param value value to set the Rnoteno
     */
    public void setRnoteno(String value) {
        setAttributeInternal(RNOTENO, value);
    }

    /**
     * Gets the attribute value for Lineno, using the alias name Lineno.
     * @return the value of Lineno
     */
    public Integer getLineno() {
        return (Integer) getAttributeInternal(LINENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Lineno.
     * @param value value to set the Lineno
     */
    public void setLineno(Integer value) {
        setAttributeInternal(LINENO, value);
    }

    /**
     * Gets the attribute value for Shelfid, using the alias name Shelfid.
     * @return the value of Shelfid
     */
    public String getShelfid() {
        return (String) getAttributeInternal(SHELFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shelfid.
     * @param value value to set the Shelfid
     */
    public void setShelfid(String value) {
        setAttributeInternal(SHELFID, value);
    }

    /**
     * Gets the attribute value for QtyAfterConversion, using the alias name QtyAfterConversion.
     * @return the value of QtyAfterConversion
     */
    public BigDecimal getQtyAfterConversion() {
        return (BigDecimal) getAttributeInternal(QTYAFTERCONVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for QtyAfterConversion.
     * @param value value to set the QtyAfterConversion
     */
    public void setQtyAfterConversion(BigDecimal value) {
        setAttributeInternal(QTYAFTERCONVERSION, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Timestamp getModifiedDate() {
        return (Timestamp) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Timestamp value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for IssuedQty, using the alias name IssuedQty.
     * @return the value of IssuedQty
     */
    public BigDecimal getIssuedQty() {
        return (BigDecimal) getAttributeInternal(ISSUEDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for IssuedQty.
     * @param value value to set the IssuedQty
     */
    public void setIssuedQty(BigDecimal value) {
        setAttributeInternal(ISSUEDQTY, value);
    }

    /**
     * Gets the attribute value for Rnotedetailseq, using the alias name Rnotedetailseq.
     * @return the value of Rnotedetailseq
     */
    public BigDecimal getRnotedetailseq() {
        return (BigDecimal) getAttributeInternal(RNOTEDETAILSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for Rnotedetailseq.
     * @param value value to set the Rnotedetailseq
     */
    public void setRnotedetailseq(BigDecimal value) {
        setAttributeInternal(RNOTEDETAILSEQ, value);
    }


    /**
     * @param storeid key constituent
     * @param rnoteno key constituent
     * @param lineno key constituent
     * @param shelfid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String storeid, String rnoteno, Integer lineno, String shelfid) {
        return new Key(new Object[] { storeid, rnoteno, lineno, shelfid });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

