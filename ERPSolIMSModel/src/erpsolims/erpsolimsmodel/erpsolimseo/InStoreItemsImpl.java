package erpsolims.erpsolimsmodel.erpsolimseo;

import erpsolglob.erpsolglobmodel.erpsolglobclasses.ERPSolGlobalsEntityImpl;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Mar 27 15:09:15 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InStoreItemsImpl extends ERPSolGlobalsEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Storeid,
        Itemid,
        UnitCost,
        Createdby,
        MinimumQty,
        CreatedDate,
        MaximumQty,
        ReOrderQty,
        Modifiedby,
        ModifiedDate,
        ReOrderPoint,
        Glcode,
        OpenUnitCost,
        Shelfid,
        DemoIssue,
        QtyOnHand,
        Movingrate,
        Ltdate,
        Stock,
        InItems;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int STOREID = AttributesEnum.Storeid.index();
    public static final int ITEMID = AttributesEnum.Itemid.index();
    public static final int UNITCOST = AttributesEnum.UnitCost.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int MINIMUMQTY = AttributesEnum.MinimumQty.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MAXIMUMQTY = AttributesEnum.MaximumQty.index();
    public static final int REORDERQTY = AttributesEnum.ReOrderQty.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int REORDERPOINT = AttributesEnum.ReOrderPoint.index();
    public static final int GLCODE = AttributesEnum.Glcode.index();
    public static final int OPENUNITCOST = AttributesEnum.OpenUnitCost.index();
    public static final int SHELFID = AttributesEnum.Shelfid.index();
    public static final int DEMOISSUE = AttributesEnum.DemoIssue.index();
    public static final int QTYONHAND = AttributesEnum.QtyOnHand.index();
    public static final int MOVINGRATE = AttributesEnum.Movingrate.index();
    public static final int LTDATE = AttributesEnum.Ltdate.index();
    public static final int STOCK = AttributesEnum.Stock.index();
    public static final int INITEMS = AttributesEnum.InItems.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InStoreItemsImpl() {
    }

    /**
     * Gets the attribute value for Storeid, using the alias name Storeid.
     * @return the value of Storeid
     */
    public String getStoreid() {
        return (String) getAttributeInternal(STOREID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Storeid.
     * @param value value to set the Storeid
     */
    public void setStoreid(String value) {
        setAttributeInternal(STOREID, value);
    }

    /**
     * Gets the attribute value for Itemid, using the alias name Itemid.
     * @return the value of Itemid
     */
    public String getItemid() {
        return (String) getAttributeInternal(ITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Itemid.
     * @param value value to set the Itemid
     */
    public void setItemid(String value) {
        setAttributeInternal(ITEMID, value);
    }

    /**
     * Gets the attribute value for UnitCost, using the alias name UnitCost.
     * @return the value of UnitCost
     */
    public BigDecimal getUnitCost() {
        return (BigDecimal) getAttributeInternal(UNITCOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnitCost.
     * @param value value to set the UnitCost
     */
    public void setUnitCost(BigDecimal value) {
        setAttributeInternal(UNITCOST, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for MinimumQty, using the alias name MinimumQty.
     * @return the value of MinimumQty
     */
    public BigDecimal getMinimumQty() {
        return (BigDecimal) getAttributeInternal(MINIMUMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinimumQty.
     * @param value value to set the MinimumQty
     */
    public void setMinimumQty(BigDecimal value) {
        setAttributeInternal(MINIMUMQTY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for MaximumQty, using the alias name MaximumQty.
     * @return the value of MaximumQty
     */
    public BigDecimal getMaximumQty() {
        return (BigDecimal) getAttributeInternal(MAXIMUMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaximumQty.
     * @param value value to set the MaximumQty
     */
    public void setMaximumQty(BigDecimal value) {
        setAttributeInternal(MAXIMUMQTY, value);
    }

    /**
     * Gets the attribute value for ReOrderQty, using the alias name ReOrderQty.
     * @return the value of ReOrderQty
     */
    public BigDecimal getReOrderQty() {
        return (BigDecimal) getAttributeInternal(REORDERQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReOrderQty.
     * @param value value to set the ReOrderQty
     */
    public void setReOrderQty(BigDecimal value) {
        setAttributeInternal(REORDERQTY, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for ReOrderPoint, using the alias name ReOrderPoint.
     * @return the value of ReOrderPoint
     */
    public BigDecimal getReOrderPoint() {
        return (BigDecimal) getAttributeInternal(REORDERPOINT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReOrderPoint.
     * @param value value to set the ReOrderPoint
     */
    public void setReOrderPoint(BigDecimal value) {
        setAttributeInternal(REORDERPOINT, value);
    }

    /**
     * Gets the attribute value for Glcode, using the alias name Glcode.
     * @return the value of Glcode
     */
    public String getGlcode() {
        return (String) getAttributeInternal(GLCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Glcode.
     * @param value value to set the Glcode
     */
    public void setGlcode(String value) {
        setAttributeInternal(GLCODE, value);
    }

    /**
     * Gets the attribute value for OpenUnitCost, using the alias name OpenUnitCost.
     * @return the value of OpenUnitCost
     */
    public BigDecimal getOpenUnitCost() {
        return (BigDecimal) getAttributeInternal(OPENUNITCOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpenUnitCost.
     * @param value value to set the OpenUnitCost
     */
    public void setOpenUnitCost(BigDecimal value) {
        setAttributeInternal(OPENUNITCOST, value);
    }

    /**
     * Gets the attribute value for Shelfid, using the alias name Shelfid.
     * @return the value of Shelfid
     */
    public String getShelfid() {
        return (String) getAttributeInternal(SHELFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shelfid.
     * @param value value to set the Shelfid
     */
    public void setShelfid(String value) {
        setAttributeInternal(SHELFID, value);
    }

    /**
     * Gets the attribute value for DemoIssue, using the alias name DemoIssue.
     * @return the value of DemoIssue
     */
    public BigDecimal getDemoIssue() {
        return (BigDecimal) getAttributeInternal(DEMOISSUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DemoIssue.
     * @param value value to set the DemoIssue
     */
    public void setDemoIssue(BigDecimal value) {
        setAttributeInternal(DEMOISSUE, value);
    }

    /**
     * Gets the attribute value for QtyOnHand, using the alias name QtyOnHand.
     * @return the value of QtyOnHand
     */
    public BigDecimal getQtyOnHand() {
        return (BigDecimal) getAttributeInternal(QTYONHAND);
    }

    /**
     * Sets <code>value</code> as the attribute value for QtyOnHand.
     * @param value value to set the QtyOnHand
     */
    public void setQtyOnHand(BigDecimal value) {
        setAttributeInternal(QTYONHAND, value);
    }

    /**
     * Gets the attribute value for Movingrate, using the alias name Movingrate.
     * @return the value of Movingrate
     */
    public BigDecimal getMovingrate() {
        return (BigDecimal) getAttributeInternal(MOVINGRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Movingrate.
     * @param value value to set the Movingrate
     */
    public void setMovingrate(BigDecimal value) {
        setAttributeInternal(MOVINGRATE, value);
    }

    /**
     * Gets the attribute value for Ltdate, using the alias name Ltdate.
     * @return the value of Ltdate
     */
    public Date getLtdate() {
        return (Date) getAttributeInternal(LTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ltdate.
     * @param value value to set the Ltdate
     */
    public void setLtdate(Date value) {
        setAttributeInternal(LTDATE, value);
    }

    /**
     * Gets the attribute value for Stock, using the alias name Stock.
     * @return the value of Stock
     */
    public BigDecimal getStock() {
        return (BigDecimal) getAttributeInternal(STOCK);
    }

    /**
     * Sets <code>value</code> as the attribute value for Stock.
     * @param value value to set the Stock
     */
    public void setStock(BigDecimal value) {
        setAttributeInternal(STOCK, value);
    }

    /**
     * @return the associated entity InItemsImpl.
     */
    public InItemsImpl getInItems() {
        return (InItemsImpl) getAttributeInternal(INITEMS);
    }

    /**
     * Sets <code>value</code> as the associated entity InItemsImpl.
     */
    public void setInItems(InItemsImpl value) {
        setAttributeInternal(INITEMS, value);
    }

    /**
     * @param storeid key constituent
     * @param itemid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String storeid, String itemid) {
        return new Key(new Object[] { storeid, itemid });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpsolims.erpsolimsmodel.erpsolimseo.InStoreItems");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setERPISGenertePK("NO");
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

